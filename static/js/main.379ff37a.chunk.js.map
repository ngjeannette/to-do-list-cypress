{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","useState","totalCheck","setTotalCheck","checkedValue","setCheckedValue","checkDictionary","setCheckDictionary","handleClick","event","checked","target","id","updateCheck","totalFilteredCheck","Object","values","filter","item","length","className","list","map","i","href","maxLength","type","onChange","onClick","App","search","setSearch","setList","placeholder","e","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEe,SAASA,EAAKC,GAAQ,IAAD,EACEC,mBAAS,GADX,mBAC3BC,EAD2B,KACfC,EADe,OAEMF,oBAAS,GAFf,mBAE3BG,EAF2B,KAEbC,EAFa,OAGYJ,mBAAS,IAHrB,mBAG3BK,EAH2B,KAGVC,EAHU,KAI5BC,EAAc,SAACC,GACnB,IAAMC,EAAUD,EAAME,OAAOD,QACvBE,EAAKH,EAAME,OAAOC,GAClBC,EAAW,2BAAQP,GAAR,kBAA0BM,EAAKF,IAChDL,GAAiBD,GACjBG,EAAmBM,GACnB,IAAMC,EAAqBC,OAAOC,OAAOH,GAAaI,QAAO,SAAAC,GAAI,OAAIA,KACrEf,EAAcW,EAAmBK,SAGnC,OACE,sBAAKC,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,8BAGA,qBAAKA,UAAU,YAAf,SAEIpB,EAAMqB,KAAKC,KAAI,SAACJ,EAAMK,GACpB,OACE,qBAAKH,UAAU,cAAcI,KAAK,IAAlC,SACE,wBAAOJ,UAAU,WAAjB,UACE,uBAAOK,UAAU,KAAKb,GAAE,eAAUW,GAAKG,KAAK,WAC1ChB,UAAWJ,EAAgB,QAAD,OAASiB,IACnCI,SAAU,aACVC,QAASpB,IAEVU,MAPsCK,QAejDvB,EAAMqB,KAAKF,OAAS,GACpB,sBAAKC,UAAU,oBAAf,UACE,sBAAMA,UAAU,2BAAhB,wBAGA,sBAAMR,GAAG,QAAT,SACGV,IAEH,0CACOF,EAAMqB,KAAKF,gBChBbU,MA7Bf,WAAgB,IAAD,EACe5B,mBAAS,IADxB,mBACN6B,EADM,KACEC,EADF,OAEW9B,mBAAS,IAFpB,mBAENoB,EAFM,KAEAW,EAFA,KAab,OACE,qBAAKZ,UAAU,MAAf,SACE,qBAAKA,UAAU,aAAf,SACE,gCACE,oBAAIA,UAAU,2BAAd,wBACA,sBAAKA,UAAU,kBAAf,UACE,uBAAOA,UAAU,QAAQR,GAAG,QAAQc,KAAK,OAAOO,YAAY,wBAAcN,SAV1D,SAACO,GACzBH,EAAUG,EAAEvB,OAAOwB,QAS4FA,MAAOL,IAC9G,wBAAQV,UAAU,iBAAiBR,GAAG,SAASgB,QAhBpC,WACnBI,EAAQ,GAAD,mBAAKX,GAAL,CAAWS,KAClBC,EAAU,KAcF,wBAEF,cAAChC,EAAD,CAAMsB,KAAMA,YCdPe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.379ff37a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function List(props) {\n  const [totalCheck, setTotalCheck] = useState(0);\n  const [checkedValue, setCheckedValue] = useState(false);\n  const [checkDictionary, setCheckDictionary] = useState({});\n  const handleClick = (event) => {\n    const checked = event.target.checked;\n    const id = event.target.id;\n    const updateCheck = { ...checkDictionary, [id]: checked };\n    setCheckedValue(!checkedValue);\n    setCheckDictionary(updateCheck);\n    const totalFilteredCheck = Object.values(updateCheck).filter(item => item);\n    setTotalCheck(totalFilteredCheck.length);\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">\n        Keeping in Track\n            </p>\n      <div className=\"checklist\" >\n        {\n          props.list.map((item, i) => {\n            return (\n              <div className=\"panel-block\" href=\"#\" key={i} >\n                <label className=\"checkbox\">\n                  <input maxLength=\"20\" id={`item-${i}`} type=\"checkbox\"\n                    checked={!!checkDictionary[`item-${i}`]}\n                    onChange={() => { }}\n                    onClick={handleClick}\n                  />\n                  {item}\n                </label>\n              </div>\n            );\n          })\n        }\n      </div>\n      {\n        props.list.length > 0 &&\n        <div className=\"panel-block total\">\n          <span className=\"is-outlined is-fullwidth\">\n            Completed:\n                    </span>\n          <span id=\"total\">\n            {totalCheck}\n          </span>\n          <span>\n            {`/${props.list.length}`}\n          </span>\n        </div>\n      }\n    </nav>\n  )\n}","import './App.css';\nimport { useState } from 'react';\nimport List from './List'\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  const [list, setList] = useState([]);\n\n  const handleSubmit = () => {\n    setList([...list, search]);\n    setSearch('')\n  }\n\n  const handleInputChange = (e) => {\n    setSearch(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div>\n          <h1 className=\"has-text-black is-size-1\">To Do Test</h1>\n          <div className=\"input-container\">\n            <input className=\"input\" id=\"input\" type=\"text\" placeholder=\"Feed the 🐱\" onChange={handleInputChange} value={search} />\n            <button className=\"button is-link\" id=\"submit\" onClick={handleSubmit}> Submit</button>\n          </div>\n          <List list={list} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}